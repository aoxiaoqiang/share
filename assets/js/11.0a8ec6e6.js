(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{301:function(a,t,r){"use strict";r.r(t);var e=r(8),s=Object(e.a)({},function(){var a=this,t=a.$createElement,r=a._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[r("h2",{attrs:{id:"由一道经典面试题引发的思考"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#由一道经典面试题引发的思考","aria-hidden":"true"}},[a._v("#")]),a._v(" 由一道经典面试题引发的思考")]),a._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[a._v(" [] == ![]\n {} == !{}\n")])])]),r("h2",{attrs:{id:"一脸懵逼-为啥会这样呢"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#一脸懵逼-为啥会这样呢","aria-hidden":"true"}},[a._v("#")]),a._v(" 一脸懵逼 为啥会这样呢")]),a._v(" "),r("h2",{attrs:{id:"javascript-的世界里没有啥好奇怪的-😊"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#javascript-的世界里没有啥好奇怪的-😊","aria-hidden":"true"}},[a._v("#")]),a._v(" javascript 的世界里没有啥好奇怪的 😊")]),a._v(" "),r("h2",{attrs:{id:"我们先搞清-和-的区别-🤔️"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#我们先搞清-和-的区别-🤔️","aria-hidden":"true"}},[a._v("#")]),a._v(' 我们先搞清 "==" 和 "===" 的区别 🤔️')]),a._v(" "),r("h3",{attrs:{id:"叫做严格运算符"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#叫做严格运算符","aria-hidden":"true"}},[a._v("#")]),a._v(' "==="叫做严格运算符')]),a._v(" "),r("ul",[r("li",[a._v("全等和不全等——仅比较而不转换 （===）")])]),a._v(" "),r("h3",{attrs:{id:"叫做相等运算符。"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#叫做相等运算符。","aria-hidden":"true"}},[a._v("#")]),a._v(' "=="叫做相等运算符。')]),a._v(" "),r("ul",[r("li",[a._v("相等和不相等——先转换再比较 （==）")])]),a._v(" "),r("h2",{attrs:{id:"严格运算符"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#严格运算符","aria-hidden":"true"}},[a._v("#")]),a._v(" 严格运算符")]),a._v(" "),r("h3",{attrs:{id:"严格运算符的运算规则如下："}},[r("a",{staticClass:"header-anchor",attrs:{href:"#严格运算符的运算规则如下：","aria-hidden":"true"}},[a._v("#")]),a._v(" 严格运算符的运算规则如下：")]),a._v(" "),r("pre",[r("code",[a._v("1. 如果类型不同，就[不相等]\n2. 如果两个都是数值，并且是同一个值，那么[相等]；如果其中至少一个是 NaN，那么[不相等]。（判断一个值是否是 NaN，只能用 isNaN()来判断）\n3. 如果两个都是字符串，每个位置的字符都一样，那么[相等]；否则[不相等]。\n4. 如果两个值都是 true，或者都是 false，那么[相等]。\n5. 如果两个值都引用同一个对象或函数，那么[相等]；否则[不相等]。\n6. 如果两个值都是 null，或者都是 undefined，那么[相等]。\n")])]),a._v(" "),r("h2",{attrs:{id:"相等运算符"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#相等运算符","aria-hidden":"true"}},[a._v("#")]),a._v(" 相等运算符")]),a._v(" "),r("h3",{attrs:{id:"相等运算符的运算规则如下："}},[r("a",{staticClass:"header-anchor",attrs:{href:"#相等运算符的运算规则如下：","aria-hidden":"true"}},[a._v("#")]),a._v(" 相等运算符的运算规则如下：")]),a._v(" "),r("ol",[r("li",[a._v("如果两个值类型相同，进行 === 比较。")]),a._v(" "),r("li",[a._v("如果两个值类型不同，他们可能相等。根据下面规则进行类型转换再比较：\n"),r("ol",[r("li",[a._v("如果一个是 null、一个是 undefined，那么[相等]。")]),a._v(" "),r("li",[a._v("如果任一值是字符串，另一个值是数值，在比较相等性之前先将字符串转换为数值；即是调用 Number()函数。")]),a._v(" "),r("li",[a._v("如果任一值时布尔值，则在比较相等性之前先将其转换为数值，即是调用 Number()函数。")]),a._v(" "),r("li",[a._v("如果一个是对象，另一个是数值或字符串，把对象转换成基础类型的值再比较。对象转换成基础类型，利用它的 toString 或者 valueOf 方法。 js 核心内置类，会尝试 valueOf 先于 toString；例外的是 Date，Date 利用的是 toString 转换。")])])])]),a._v(" "),r("h2",{attrs:{id:"回到题目-我们来探讨一下-的结果为什么会是-true-🤔"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#回到题目-我们来探讨一下-的结果为什么会是-true-🤔","aria-hidden":"true"}},[a._v("#")]),a._v(" 回到题目 我们来探讨一下 [] == ! [] 的结果为什么会是 true 🤔")]),a._v(" "),r("ol",[r("li",[a._v("根据运算符优先级, ! 的优先级是大于 == 的，所以先会执行 ![] 空数组转化为布尔类型 ==号 👉 就是 false;")]),a._v(" "),r("li",[a._v("== 👉 是 false 的话就符合 第三条规定 布尔类型比较之前 需要转化为数值 及 Number(false) 得到 0;")]),a._v(" "),r("li",[a._v('此时已经变成了 [] == 0 进行比较 符合第四条规定 即 [ ].toString();结果为[].toString() = "";')]),a._v(" "),r("li",[a._v('此时得到 "" == 0,发现符合第二条即 Number("");结果为 Number("") = 0;')]),a._v(" "),r("li",[a._v("此时得到 0 == 0 两个同时为数值类型比较所以结果为 true;")])]),a._v(" "),r("h2",{attrs:{id:"练习"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#练习","aria-hidden":"true"}},[a._v("#")]),a._v(" 练习")]),a._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[a._v(" +[] == +![]\n\n true == 'true'\n\n 'foo' + + 'bar'\n")])])]),r("h2",{attrs:{id:"总结"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#总结","aria-hidden":"true"}},[a._v("#")]),a._v(" 总结")])])},[],!1,null,null,null);t.default=s.exports}}]);